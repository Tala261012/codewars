//* JSON, это строка
/*
JSON.stringify для преобразования объектов в JSON.
JSON.parse для преобразования JSON обратно в объект.

JSON ПОДДЕРЖИВАЕТ следующие типы данных:
- Объекты { ... }
- Массивы [ ... ]
- Примитивы:
- строки,
- числа,
- логические значения true/false,
- null.
- вложенные объекты поддерживаются и конвертируются автоматически.

ПРОПУСКАЕТ:
- Свойства-функции (методы).
- Символьные ключи и значения.
- Свойства, содержащие undefined.

? JSON.stringify(value, replacer?, space?)
replacer - Массив свойств для кодирования (какие свойства объекта брать)
			или функция соответствия function(key, value).
space - Дополнительное пространство (отступы), используемое для форматирования.
			может быть строкой или числом (пробелов)
			JSON.stringify(user, null, 2) - 
			отображать вложенные объекты в несколько строк с отступом в 2 пробела внутри объекта

? Первый вызов replacer – особенный. 
Ему передаётся специальный «объект-обёртка»: {"": meetup}. 
Другими словами, первая (key, value) пара имеет пустой ключ, 
а значением является целевой объект в общем.
Значение this внутри replacer – это объект, который 
содержит текущее свойство.

? JSON.parse(text, reviver?)
reviver - Необязательная функция, которая будет вызываться 
для каждой пары (ключ, значение) и может преобразовывать значение.
*/
let str = '{"title":"Conference","date":"2017-11-30T12:00:00.000Z"}';

// reviver
let meetup = JSON.parse(str, function (key, value) {
  if (key == "date") return new Date(value);
  return value;
});

console.log(meetup.date.getDate()); // 30

/*
? Errors
let json = `{
  name: "John",                     // Ошибка: имя свойства без кавычек
  "surname": 'Smith',               // Ошибка: одинарные кавычки в значении (должны быть двойными)
  'isAdmin': false,                 // Ошибка: одинарные кавычки в ключе (должны быть двойными)
  "birthday": new Date(2000, 2, 3), // Ошибка: не допускается конструктор "new", только значения
  "gender": "male"                  // Ошибка: отсутствует запятая после непоследнего свойства
  "friends": [0,1,2,3],             // Ошибка: не должно быть запятой после последнего свойства
}`;

JSON НЕ ПОДДЕРЖИВАЕТ комментарии!!! Добавление комментария в JSON делает его недействительным.
*/
